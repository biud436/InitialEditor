{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://initial-editor/./node_modules/electron/index.js","webpack://initial-editor/./main/config/index.ts","webpack://initial-editor/./main/utils/Path.ts","webpack://initial-editor/./main/windows/mainWindow.ts","webpack://initial-editor/./main/windows/splashWindow.ts","webpack://initial-editor/external commonjs2 \"electron-serve\"","webpack://initial-editor/external commonjs2 \"jquery\"","webpack://initial-editor/external node-commonjs \"fs\"","webpack://initial-editor/external node-commonjs \"path\"","webpack://initial-editor/external node-commonjs \"url\"","webpack://initial-editor/webpack/bootstrap","webpack://initial-editor/webpack/runtime/compat get default export","webpack://initial-editor/webpack/runtime/define property getters","webpack://initial-editor/webpack/runtime/hasOwnProperty shorthand","webpack://initial-editor/webpack/runtime/make namespace object","webpack://initial-editor/./main/background.ts"],"sourcesContent":["const fs = require('fs');\nconst path = require('path');\n\nconst pathFile = path.join(__dirname, 'path.txt');\n\nfunction getElectronPath () {\n  let executablePath;\n  if (fs.existsSync(pathFile)) {\n    executablePath = fs.readFileSync(pathFile, 'utf-8');\n  }\n  if (process.env.ELECTRON_OVERRIDE_DIST_PATH) {\n    return path.join(process.env.ELECTRON_OVERRIDE_DIST_PATH, executablePath || 'electron');\n  }\n  if (executablePath) {\n    return path.join(__dirname, 'dist', executablePath);\n  } else {\n    throw new Error('Electron failed to install correctly, please delete node_modules/electron and try installing again');\n  }\n}\n\nmodule.exports = getElectronPath();\n","export type StartingWindowOfMap = \"mainWindow\" | \"splashWindow\";\r\nexport type ElectronStartingConfig = {\r\n    [key in StartingWindowOfMap]: {\r\n        get: () => Electron.BrowserWindowConstructorOptions;\r\n    };\r\n};\r\nexport type MonitorInfo = Record<\r\n    number,\r\n    {\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        height: number;\r\n    }\r\n>;\r\n\r\n/**\r\n * @description This object creates a configuration object for the application.\r\n */\r\nexport const config: ElectronStartingConfig = {\r\n    mainWindow: {\r\n        get(): Electron.BrowserWindowConstructorOptions {\r\n            // 브라우저 창을 생성합니다.\r\n            const isMacOS = process.platform === \"darwin\";\r\n            const windowRect = {\r\n                width: 1280,\r\n                height: 720,\r\n            };\r\n            const options: Electron.BrowserWindowConstructorOptions = {\r\n                ...windowRect,\r\n                webPreferences: {\r\n                    nodeIntegration: true,\r\n                    contextIsolation: false,\r\n                    devTools: true,\r\n                    // allowRunningInsecureContent: true,\r\n                },\r\n                show: false,\r\n                frame: isMacOS ? true : false,\r\n                titleBarStyle: isMacOS ? \"default\" : \"hidden\",\r\n                darkTheme: true,\r\n                alwaysOnTop: false,\r\n            };\r\n\r\n            return options;\r\n        },\r\n    },\r\n    splashWindow: {\r\n        get(): Electron.BrowserWindowConstructorOptions {\r\n            return {\r\n                width: 1280,\r\n                height: 640,\r\n                webPreferences: {\r\n                    nodeIntegration: true,\r\n                    contextIsolation: false,\r\n                    devTools: true,\r\n                },\r\n                frame: false,\r\n                alwaysOnTop: true,\r\n                center: true,\r\n                modal: true,\r\n            };\r\n        },\r\n    },\r\n};\r\n","import * as path from \"path\";\r\nimport * as url from \"url\";\r\n\r\nexport namespace EntryPoint {\r\n    export class Path {\r\n        public static WORK_DIR = process.cwd();\r\n\r\n        public static join(...paths: string[]): string {\r\n            return url.pathToFileURL(path.join(...paths)).href;\r\n        }\r\n\r\n        public static resolve(...paths: string[]): string {\r\n            return url.pathToFileURL(path.resolve(...paths)).href;\r\n        }\r\n\r\n        public static get separator(): string {\r\n            return path.sep;\r\n        }\r\n\r\n        public static getWorkDir(): string {\r\n            return Path.WORK_DIR.replace(/\\\\/g, \"/\");\r\n        }\r\n    }\r\n}\r\n","import { BrowserWindow } from \"electron\";\r\n\r\nconst isDev = process.env.IS_DEV == \"true\" ? true : false;\r\n\r\n/**\r\n * @description\r\n * This class allows you to create a new window that is applied some configuration.\r\n */\r\nexport class MainWindow extends BrowserWindow {\r\n    jQuery: any;\r\n    $: any;\r\n\r\n    private isProd: boolean = process.env.NODE_ENV === \"production\";\r\n\r\n    constructor(options?: Electron.BrowserWindowConstructorOptions) {\r\n        super(options);\r\n        this.setConfiguration()\r\n            .then(() => {})\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    public async setConfiguration() {\r\n        this.setMenuBarVisibility(false);\r\n        this.$ = this.jQuery = require(\"jquery\");\r\n        if (this.isProd) {\r\n            await this.loadURL(\"app://./home.html\");\r\n        } else {\r\n            const port = process.argv[2];\r\n            // await this.loadURL(`http://localhost:${port}/home`);\r\n            await this.loadURL(`http://localhost:8080/home`);\r\n            this.webContents.openDevTools();\r\n        }\r\n        this.webContents.once(\"dom-ready\", () => {\r\n            this.webContents.send(\"change-theme\");\r\n        });\r\n    }\r\n\r\n    public onMaximize() {\r\n        let restoreSize = [];\r\n\r\n        if (!this.isMaximized()) {\r\n            restoreSize = this.getMaximumSize();\r\n            this.maximize();\r\n        } else {\r\n            this.unmaximize();\r\n        }\r\n    }\r\n}\r\n","import { BrowserWindow } from \"electron\";\r\nimport * as path from \"path\";\r\nimport { config } from \"../config\";\r\nimport { EntryPoint } from \"../utils/Path\";\r\n\r\n/**\r\n * Show up the splash window on the screen.\r\n *\r\n * @param mainWindow\r\n * @returns\r\n */\r\nexport async function showSplashWindow(\r\n    mainWindow: BrowserWindow\r\n): Promise<BrowserWindow> {\r\n    const isProd: boolean = process.env.NODE_ENV === \"production\";\r\n\r\n    const options: Electron.BrowserWindowConstructorOptions =\r\n        config.splashWindow.get();\r\n    const splash: BrowserWindow = new BrowserWindow(options);\r\n    let url = \"\";\r\n    if (isProd) {\r\n        url = \"app://./splash.html\";\r\n    } else {\r\n        const port = process.argv[2];\r\n        url = `http://localhost:${port}/splash`;\r\n    }\r\n\r\n    splash.loadURL(url);\r\n    splash.center();\r\n    splash.on(\"close\", () => mainWindow.show());\r\n    splash.close();\r\n\r\n    return splash;\r\n}\r\n","module.exports = require(\"electron-serve\");","module.exports = require(\"jquery\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"url\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as path from \"path\";\r\nimport * as fs from \"fs\";\r\nimport { app, BrowserWindow, ipcMain, Menu, dialog, screen } from \"electron\";\r\nimport { MainWindow } from \"./windows/mainWindow\";\r\nimport { config, MonitorInfo } from \"./config\";\r\nimport { showSplashWindow } from \"./windows/splashWindow\";\r\nimport { EntryPoint as Ep } from \"./utils/Path\";\r\nimport serve from \"electron-serve\";\r\n\r\nconst Path = Ep.Path;\r\n\r\nconst isProd: boolean = process.env.NODE_ENV === \"production\";\r\nif (isProd) {\r\n    serve({ directory: \"app\" });\r\n} else {\r\n    app.setPath(\"userData\", `${app.getPath(\"userData\")} (development)`);\r\n}\r\n\r\n/**\r\n * @author biud436\r\n * @description\r\n * This class allows you to create the electron application and start.\r\n */\r\nexport class EntryPoint {\r\n    private _hostWindow!: MainWindow | null;\r\n    private isProd: boolean = process.env.NODE_ENV === \"production\";\r\n\r\n    constructor() {\r\n        this.initWithTitle();\r\n        this.createUserDataStorage();\r\n    }\r\n\r\n    /**\r\n     * Sets the title of an application from hard-coded text.\r\n     */\r\n    initWithTitle() {\r\n        app.setName(\"InitialEditor\");\r\n    }\r\n\r\n    createUserDataStorage() {\r\n        if (this.isProd) {\r\n            serve({ directory: \"app\" });\r\n        } else {\r\n            app.setPath(\"userData\", `${app.getPath(\"userData\")} (development)`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Prints the information of each monitor.\r\n     * if you are using multiple monitors, you can use this method to print the information of each monitor.\r\n     */\r\n    printMonitorInfo() {\r\n        const data = <MonitorInfo>{};\r\n        const displays = screen.getAllDisplays();\r\n\r\n        // 모니터의 갯수입니다.\r\n        displays.forEach((e, i) => {\r\n            const monitorId = e.id;\r\n\r\n            data[monitorId] = {\r\n                x: e.bounds.x,\r\n                y: e.bounds.y,\r\n                width: e.size.width,\r\n                height: e.size.height,\r\n            };\r\n        });\r\n        fs.writeFileSync(\"display.json\", JSON.stringify(data, null, 4));\r\n    }\r\n\r\n    connectIPC(hostWindow: MainWindow) {\r\n        hostWindow.on(\"closed\", () => {\r\n            this._hostWindow = null;\r\n        });\r\n\r\n        // 별도의 패턴으로 정리해야 할 필요성이 있음.\r\n        ipcMain.on(\"minimize\", () => hostWindow.minimize());\r\n        ipcMain.on(\"maximize\", () => hostWindow.onMaximize());\r\n        ipcMain.on(\"message_box:error\", (event, ...args: any[]) => {\r\n            const [title, content] = args;\r\n            dialog.showErrorBox(title, content);\r\n        });\r\n        ipcMain.on(\"close\", () => hostWindow.close());\r\n        ipcMain.on(\"set-resolution\", (event, width, height) => {\r\n            hostWindow.setSize(width, height);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Creates an internal menu on macOS.\r\n     * However This is not completed development.\r\n     */\r\n    createInternalMenuForDarwin(hostWindow: MainWindow) {\r\n        if (process.platform === \"darwin\") {\r\n            Menu.setApplicationMenu(\r\n                Menu.buildFromTemplate([\r\n                    {\r\n                        role: \"appMenu\",\r\n                        label: \"InitialEditor\",\r\n                        submenu: [\r\n                            {\r\n                                role: \"quit\",\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        label: \"파일\",\r\n                        role: \"fileMenu\",\r\n                        submenu: [\r\n                            {\r\n                                label: \"새로 만들기\",\r\n                                accelerator: \"CmdOrCtrl+N\",\r\n                                click: () => {\r\n                                    hostWindow.webContents.send(\"new-file\");\r\n                                },\r\n                            },\r\n                            {\r\n                                label: \"프로그램 종료\",\r\n                                accelerator: \"CmdOrCtrl+Q\",\r\n                                role: \"quit\",\r\n                            },\r\n                        ],\r\n                    },\r\n                ])\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a main window of the application.\r\n     * Host Window means the main window that contains a tile editor that can draw tiles.\r\n     *\r\n     * @returns\r\n     */\r\n    createWindow() {\r\n        this.connectIPC(\r\n            (this._hostWindow = new MainWindow(config.mainWindow.get()))\r\n        );\r\n\r\n        this.printMonitorInfo();\r\n        this.createInternalMenuForDarwin(this._hostWindow);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Sets event listeners.\r\n     */\r\n    listenOn() {\r\n        app.whenReady().then(() => {\r\n            this.createWindow();\r\n            if (process.platform === \"darwin\") {\r\n                ipcMain.emit(\"creatSystemMenu\", this._hostWindow);\r\n            }\r\n\r\n            // open develooper tools\r\n            this._hostWindow!.webContents.openDevTools({\r\n                mode: \"detach\",\r\n            });\r\n            this._hostWindow!.center();\r\n            showSplashWindow(this._hostWindow!);\r\n        });\r\n\r\n        app.on(\"window-all-closed\", () => {\r\n            switch (process.platform) {\r\n                case \"darwin\":\r\n                    process.exit(0);\r\n                case \"win32\":\r\n                    app.quit();\r\n                    break;\r\n                default:\r\n                    app.quit();\r\n            }\r\n        });\r\n\r\n        app.on(\"activate\", () => {\r\n            if (BrowserWindow.getAllWindows().length === 0) {\r\n                this.createWindow();\r\n            }\r\n        });\r\n    }\r\n\r\n    static builder() {\r\n        return new EntryPoint();\r\n    }\r\n}\r\n\r\nEntryPoint.builder().listenOn();\r\n"],"names":[],"sourceRoot":""}